// Nicole Olvera
// username: nicoleolv
// uteid: no4342

#include <iostream>
#include <vector>

using namespace std;

bool isprime(int num){ // checks to see if our input 'num' i\
s a prime number
  bool isprime = true;

 if (num <= 1) {
   isprime = false;
 } else {
   for(int divisor = 2; divisor <= num/2; divisor++){  // for loop goes through numbers to check divisibility
     if(num % divisor == 0){
       isprime = false;
       break; // exiting the loop once a divisor is found
     }
   }

 }

 return isprime;
}

class primegenerator{

public:
  int num_primes = 0; // initialize number_of_primes_found wh\
ich stores the amount of prime numbers found
int current = 2; // stores the current prime number which begins at 2

int number_of_primes_found() const{
  return num_primes;
}

  int nextprime(){ // method counts the next prime number
    while (true) {
      if (isprime(current)){
        num_primes++;
        return current++;
      }
      current++;

    }
  }

};


int main(){
  int bound;
  cin >> bound;
  
  primegenerator sequence;
  vector<int> primes;

  while (sequence.nextprime() <= bound){
    primes.push_back(sequence.current - 1);
  }

  for (int e = 4; e <= bound; e += 2){
    cout << "The number " << e << " is ";
    

    for (int p : primes){
      if (isprime(e - p)){
	cout << p << "+" << (e - p) << '\n';
	break;
      }
    }
  }

  return 0;
}


  
